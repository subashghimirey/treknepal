# Generated by Django 5.2.2 on 2025-06-12 16:49

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Trek',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('district', models.TextField()),
                ('region', models.TextField()),
                ('difficulty', models.TextField()),
                ('duration', models.TextField()),
                ('best_seasons', models.JSONField(blank=True, null=True)),
                ('elevation_profile', models.JSONField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('historical_significance', models.TextField(blank=True, null=True)),
                ('itinerary', models.JSONField(blank=True, null=True)),
                ('cost_breakdown', models.JSONField(blank=True, null=True)),
                ('transportation', models.TextField(blank=True, null=True)),
                ('nearby_attractions', models.JSONField(blank=True, null=True)),
                ('required_permits', models.JSONField(blank=True, null=True)),
                ('recommended_gear', models.JSONField(blank=True, null=True)),
                ('safety_info', models.JSONField(blank=True, null=True)),
                ('photos', models.JSONField(blank=True, null=True)),
                ('itinerary_points', models.JSONField(blank=True, null=True)),
                ('transit_card_cost', models.IntegerField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('cluster_label', models.IntegerField(blank=True, null=True)),
                ('tags', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(max_length=255)),
                ('photo_url', models.URLField(blank=True, null=True)),
                ('role', models.CharField(default='user', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TransitPass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encrypted_qr', models.TextField()),
                ('issued_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('validated_at', models.DateTimeField(blank=True, null=True)),
                ('trek', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treks.trek')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treks.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='TimsApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tims_card_no', models.CharField(max_length=255, unique=True)),
                ('transaction_id', models.CharField(max_length=255, unique=True)),
                ('issue_date', models.DateTimeField()),
                ('full_name', models.CharField(max_length=255)),
                ('nationality', models.CharField(max_length=255)),
                ('passport_number', models.CharField(max_length=255)),
                ('gender', models.CharField(max_length=10)),
                ('date_of_birth', models.DateField()),
                ('trekker_area', models.CharField(max_length=255)),
                ('route', models.CharField(max_length=255)),
                ('entry_date', models.DateField()),
                ('exit_date', models.DateField()),
                ('nepal_contact_name', models.CharField(max_length=255)),
                ('nepal_organization', models.CharField(max_length=255)),
                ('nepal_designation', models.CharField(blank=True, max_length=255, null=True)),
                ('nepal_mobile', models.CharField(max_length=20)),
                ('nepal_office_number', models.CharField(blank=True, max_length=20, null=True)),
                ('nepal_address', models.TextField()),
                ('home_contact_name', models.CharField(max_length=255)),
                ('home_city', models.CharField(max_length=255)),
                ('home_mobile', models.CharField(max_length=20)),
                ('home_office_number', models.CharField(blank=True, max_length=20, null=True)),
                ('home_address', models.TextField()),
                ('status', models.CharField(default='pending', max_length=50)),
                ('payment_status', models.CharField(default='pending', max_length=50)),
                ('permit_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='treks.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('trek', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treks.trek')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treks.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='treks.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treks.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='UserTrekInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction_type', models.CharField(choices=[('view', 'View'), ('like', 'Like'), ('favorite', 'Favorite'), ('comment', 'Comment'), ('post', 'Post')], max_length=20)),
                ('interaction_weight', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('trek', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treks.trek')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treks.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='treks.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treks.userprofile')),
            ],
            options={
                'unique_together': {('post', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('trek', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treks.trek')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treks.userprofile')),
            ],
            options={
                'unique_together': {('user', 'trek')},
            },
        ),
    ]
